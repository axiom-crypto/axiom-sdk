import { ethers, keccak256 } from "ethers";
import { Axiom } from "../../src/core/axiom";
import { AxiomConfig } from "../../src/shared/types";

describe('QueryBuilder', () => {
  if (process.env.PROVIDER_URL === undefined) {
    throw new Error("PROVIDER_URL environment variable is not set");
  }
  const config: AxiomConfig = {
    apiKey: "demo",
    providerUri: process.env.PROVIDER_URL as string,
    version: "0.2",
  }
  const ax = new Axiom(config);
  const abiCoder = new ethers.AbiCoder();

  describe('Building a Query', () => {
    test('should return a queryResponse', async () => {
      
      const qb = ax.newQueryBuilder(16);
      qb.append({blockNumber: 17090217, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 0});
      qb.append({blockNumber: 17090217, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 1});
      qb.append({blockNumber: 17090217, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 2});
      qb.append({blockNumber: 17090218, address: null, slot: null});
      qb.append({blockNumber: 17090219, address: null, slot: null});
      qb.append({blockNumber: 17090220, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 0});
      qb.append({blockNumber: 17090220, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 1});
      qb.append({blockNumber: 17090220, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 2});
      qb.append({blockNumber: 17090300, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: 0});
      qb.append({blockNumber: 17090300, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: null});
      qb.append({blockNumber: 17090300, address: "0xab5801a7d398351b8be11c439e05c5b3259aec9b", slot: null});
      
      const {queryResponse, queryData} = await qb.build();
      expect(queryResponse).toEqual("0xfaf614a6891abca5ae581de7a68c6f577b0008e15c2696d24a8264a8aa2ab057");
      expect(queryData).toEqual("0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000000000000000000000000000000003a0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000054000000000000000000000000000000000000000000000000000000000000005e00000000000000000000000000000000000000000000000000000000000000680000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6a9000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6a9000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6a9000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000104c6aa00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000104c6ab00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6ac000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6ac000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6ac000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000104c6fc000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000104c6fc000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000104c6fc000000000000000000000000ab5801a7d398351b8be11c439e05c5b3259aec9b");
    });

    test('should return a queryResponse', async () => {
      const BLOCK_NUM = 14_985_438;
      const NOUNS_ADDR = "0x9C8fF314C9Bc7F6e59A9d9225Fb22946427eDC03";
      const QUERY_SIZE = 64;
      
      const qb = ax.newQueryBuilder(QUERY_SIZE);
      qb.append({blockNumber: BLOCK_NUM, address: NOUNS_ADDR, slot: 0});
      qb.append({blockNumber: BLOCK_NUM, address: NOUNS_ADDR, slot: 1});
      qb.append({blockNumber: BLOCK_NUM, address: NOUNS_ADDR, slot: 2});
      for (let i = 0; i < QUERY_SIZE - 3; i++) {
        const encoded = abiCoder.encode(
          ["uint256", "uint256"],
          [i, 3]
        );
        const slot = keccak256(encoded);
        qb.append({blockNumber: BLOCK_NUM, address: NOUNS_ADDR, slot: slot});
      }
      const {queryResponse} = await qb.build();
      expect(queryResponse).toEqual("0x5f51c5a6585886824c66636ba8d4324527c97d113b5bd3ad6197255e64a4c341");
    }, 15000);
  });
});